/**
 *
 * @author heske.timjonathan,zimmer.lennard
 */
package gruppeneinteilung.gui;

import gruppeneinteilung.helper.PrintPDF;
import gruppeneinteilung.helper.Speicherung;
import gruppeneinteilung.model.Gruppeneinteilung;
import gruppeneinteilung.model.Klasse;
import gruppeneinteilung.model.Jahrgang;
import gruppeneinteilung.model.GruppeReligion;
import gruppeneinteilung.model.GruppeSport;
import gruppeneinteilung.model.GruppeSprache;
import gruppeneinteilung.model.GruppeZweig;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SpinnerNumberModel;
import javax.swing.UIManager;

public class GUI extends javax.swing.JFrame {

    public Gruppeneinteilung ge;
    private Jahrgang aktuellerJahrgang;
    private File file;
    private EinstellungFrameSprachen einstellungFrameSprachen;
    private EinstellungFrameReligion einstellungFrameReligion;
    private EinstellungFrameSport einstellungFrameSport;
    private EinstellungFrameZweig einstellungFrameZweig;
    private String selectedTab = "Klassen";

    /**
     * Creates new form GUI
     */
    public GUI() {

        initComponents();
        ladeDatei();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     *///
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();
        jPanel2 = new javax.swing.JPanel();
        jComboBoxJahrgang = new javax.swing.JComboBox();
        jSpinnerAnzahlKlassen = new javax.swing.JSpinner(new SpinnerNumberModel(4,1,10,1));
        jLabelKlassen = new javax.swing.JLabel();
        jComboBoxSortierung = new javax.swing.JComboBox<String>();
        jButtonJahrgangDrucken = new javax.swing.JButton();
        jLabelSchülergesamt = new javax.swing.JLabel();
        jLabelKatholisch = new javax.swing.JLabel();
        jLabelEthik = new javax.swing.JLabel();
        jLabelEvangelisch = new javax.swing.JLabel();
        jLabelZweig1 = new javax.swing.JLabel();
        jLabelMännlich = new javax.swing.JLabel();
        jLabelWeiblich = new javax.swing.JLabel();
        jLabelZweig2 = new javax.swing.JLabel();
        jLabelZweig3 = new javax.swing.JLabel();
        jCheckBoxReligion = new javax.swing.JCheckBox();
        jCheckBoxSport = new javax.swing.JCheckBox();
        jCheckBoxZweig = new javax.swing.JCheckBox();
        jButtonEinstellungReligion = new javax.swing.JButton();
        jButtonEinstellungSport = new javax.swing.JButton();
        jButtonEinstellungZweig = new javax.swing.JButton();
        jCheckBoxSprache = new javax.swing.JCheckBox();
        jButtonEinstellungSprache = new javax.swing.JButton();
        jButtonAnsichtDrucken = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelKlassen = new javax.swing.JPanel();
        jPanelSprachen = new javax.swing.JPanel();
        jPanelReligion = new javax.swing.JPanel();
        jPanelSport = new javax.swing.JPanel();
        jPanelZweig = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemImport = new javax.swing.JMenuItem();
        jMenuItemOpen = new javax.swing.JMenuItem();
        jMenuItemSave = new javax.swing.JMenuItem();
        jMenuItemSaveAs = new javax.swing.JMenuItem();
        jMenuItemClose = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuDrucken = new javax.swing.JMenu();
        jMenuItemAllesDrucken = new javax.swing.JMenuItem();
        jMenuItemJahrgangDrucken = new javax.swing.JMenuItem();
        jMenuItemKlassenDrucken = new javax.swing.JMenuItem();
        jMenuItemFremdsprachenGruppenDrucken = new javax.swing.JMenuItem();
        jMenuItemReligionsGruppenDrucken = new javax.swing.JMenuItem();
        jMenuItemSportGruppenDrucken = new javax.swing.JMenuItem();
        jMenuItemZweigGruppenDrucken = new javax.swing.JMenuItem();
        jMenuHilfe = new javax.swing.JMenu();
        jMenuItemAnleitung = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jMenu3.setText("jMenu3");

        jMenu4.setText("File");
        jMenuBar2.add(jMenu4);

        jMenu5.setText("Edit");
        jMenuBar2.add(jMenu5);

        jMenu6.setText("jMenu6");

        jMenu7.setText("jMenu7");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kursmanager");
        setMinimumSize(new java.awt.Dimension(1280, 720));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jComboBoxJahrgang.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Jahrgang wählen", "5", "6", "7", "8", "9", "10"}));
        jComboBoxJahrgang.setEnabled(false);
        jComboBoxJahrgang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxJahrgangActionPerformed(evt);
            }
        });

        jSpinnerAnzahlKlassen.setEnabled(false);
        jSpinnerAnzahlKlassen.setModel(new javax.swing.SpinnerNumberModel(0, 0, 8, 1));
        jSpinnerAnzahlKlassen.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerAnzahlKlassenStateChanged(evt);
            }
        });

        jLabelKlassen.setText("Anzahl Klassen:");
        jLabelKlassen.setEnabled(false);

        jComboBoxSortierung.setEnabled(false);
        jComboBoxSortierung.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sortierung wählen", "Alphabetisch", "Männlich/Weiblich", "Religion", "Zweig" }));
        jComboBoxSortierung.setName(""); // NOI18N
        jComboBoxSortierung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSortierungActionPerformed(evt);
            }
        });

        jButtonJahrgangDrucken.setText("Jahrgang drucken");
        jButtonJahrgangDrucken.setEnabled(false);
        jButtonJahrgangDrucken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonJahrgangDruckenActionPerformed(evt);
            }
        });

        jLabelSchülergesamt.setText("Anzahl Schüler gesamt:");
        jLabelSchülergesamt.setVisible(false);

        jLabelKatholisch.setText("Anzahl Katholisch:");
        jLabelKatholisch.setVisible(false);

        jLabelEthik.setText("Anzahl Ethik:");
        jLabelEthik.setVisible(false);

        jLabelEvangelisch.setText("Anzahl Evangelisch:");
        jLabelEvangelisch.setVisible(false);

        jLabelZweig1.setText("");
        jLabelZweig1.setVisible(false);

        jLabelMännlich.setText("Anzahl Männlich:");
        jLabelMännlich.setVisible(false);

        jLabelWeiblich.setText("Anzahl Weiblich:");
        jLabelWeiblich.setVisible(false);

        jLabelZweig2.setText("");
        jLabelZweig2.setVisible(false);

        jLabelZweig3.setText("");
        jLabelZweig3.setVisible(false);

        jCheckBoxReligion.setText("Religion");
        jCheckBoxReligion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxReligionStateChanged(evt);
            }
        });
        jCheckBoxReligion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxReligionActionPerformed(evt);
            }
        });
        jCheckBoxReligion.setEnabled(false);

        jCheckBoxSport.setText("Sport");
        jCheckBoxSport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSportActionPerformed(evt);
            }
        });
        jCheckBoxSport.setEnabled(false);

        jCheckBoxZweig.setText("Zweig");
        jCheckBoxZweig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxZweigActionPerformed(evt);
            }
        });
        jCheckBoxZweig.setEnabled(false);

        jButtonEinstellungReligion.setText("Einstellung");
        jButtonEinstellungReligion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEinstellungReligionActionPerformed(evt);
            }
        });
        jButtonEinstellungReligion.setEnabled(false);

        jButtonEinstellungSport.setText("Einstellung");
        jButtonEinstellungSport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEinstellungSportActionPerformed(evt);
            }
        });
        jButtonEinstellungSport.setEnabled(false);

        jButtonEinstellungZweig.setText("Einstellung");
        jButtonEinstellungZweig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEinstellungZweigActionPerformed(evt);
            }
        });
        jButtonEinstellungZweig.setEnabled(false);

        jCheckBoxSprache.setEnabled(false);
        jCheckBoxSprache.setText("Fremdsprachen");
        jCheckBoxSprache.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSpracheActionPerformed(evt);
            }
        });

        jButtonEinstellungSprache.setEnabled(false);
        jButtonEinstellungSprache.setText("Einstellungen");
        jButtonEinstellungSprache.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEinstellungSpracheActionPerformed(evt);
            }
        });

        jButtonAnsichtDrucken.setEnabled(false);
        jButtonAnsichtDrucken.setText("Ansicht drucken");
        jButtonAnsichtDrucken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnsichtDruckenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxSortierung, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxJahrgang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonJahrgangDrucken, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabelKlassen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerAnzahlKlassen, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelZweig2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelZweig3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAnsichtDrucken, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelSchülergesamt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelKatholisch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelEthik, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelEvangelisch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelZweig1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelMännlich, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelWeiblich, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCheckBoxSprache, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCheckBoxReligion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonEinstellungReligion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonEinstellungSprache, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jCheckBoxSport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonEinstellungSport, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jCheckBoxZweig, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonEinstellungZweig, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBoxJahrgang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelKlassen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSpinnerAnzahlKlassen))
                .addGap(18, 18, 18)
                .addComponent(jComboBoxSortierung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonJahrgangDrucken)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonAnsichtDrucken)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxSprache)
                    .addComponent(jButtonEinstellungSprache))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxReligion)
                    .addComponent(jButtonEinstellungReligion))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxSport)
                    .addComponent(jButtonEinstellungSport))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxZweig)
                    .addComponent(jButtonEinstellungZweig))
                .addGap(18, 18, 18)
                .addComponent(jLabelSchülergesamt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelKatholisch, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelEthik, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelEvangelisch, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelMännlich, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabelWeiblich, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelZweig1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelZweig2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelZweig3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jComboBoxSortierung.getAccessibleContext().setAccessibleName("");

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jPanelKlassen.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanelKlassenFocusGained(evt);
            }
        });
        jPanelKlassen.setLayout(new java.awt.GridLayout(1, 8));
        jTabbedPane1.addTab("Klassen", jPanelKlassen);

        jPanelSprachen.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanelSprachenFocusGained(evt);
            }
        });
        jPanelSprachen.setLayout(new java.awt.GridLayout(1, 8));
        jTabbedPane1.addTab("Sprachengruppen", jPanelSprachen);

        jPanelReligion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanelReligionFocusGained(evt);
            }
        });
        jPanelReligion.setLayout(new java.awt.GridLayout(1, 8));
        jTabbedPane1.addTab("Religionsgruppen", jPanelReligion);

        jPanelSport.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanelSportFocusGained(evt);
            }
        });
        jPanelSport.setLayout(new java.awt.GridLayout(1, 0));
        jTabbedPane1.addTab("Sportgruppen", jPanelSport);

        jPanelZweig.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanelZweigFocusGained(evt);
            }
        });
        jPanelZweig.setLayout(new java.awt.GridLayout(1, 0));
        jTabbedPane1.addTab("Zweiggruppen", jPanelZweig);

        jMenu1.setText("Datei");

        jMenuItemImport.setText("Importieren");
        jMenuItemImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemImportActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemImport);

        jMenuItemOpen.setText("Öffnen");
        jMenuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemOpen);

        jMenuItemSave.setText("Speichern");
        jMenuItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveActionPerformed(evt);
            }
        });
        jMenuItemSave.setEnabled(false);
        jMenu1.add(jMenuItemSave);

        jMenuItemSaveAs.setText("Speichern unter...");
        jMenuItemSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveAsActionPerformed(evt);
            }
        });
        jMenuItemSaveAs.setEnabled(false);
        jMenu1.add(jMenuItemSaveAs);

        jMenuItemClose.setText("Schließen");
        jMenuItemClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCloseActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemClose);

        jMenuBar1.add(jMenu1);

        jMenu2.setEnabled(false);
        jMenu2.setText("Bearbeiten");

        jMenuItem2.setText("Neuer Schüler");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        jMenuDrucken.setEnabled(false);
        jMenuDrucken.setText("Drucken");

        jMenuItemAllesDrucken.setText("Alles drucken");
        jMenuItemAllesDrucken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAllesDruckenActionPerformed(evt);
            }
        });
        jMenuDrucken.add(jMenuItemAllesDrucken);

        jMenuItemJahrgangDrucken.setText("Jahrgang drucken");
        jMenuItemJahrgangDrucken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemJahrgangDruckenActionPerformed(evt);
            }
        });
        jMenuDrucken.add(jMenuItemJahrgangDrucken);

        jMenuItemKlassenDrucken.setText("Klassen drucken");
        jMenuItemKlassenDrucken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemKlassenDruckenActionPerformed(evt);
            }
        });
        jMenuDrucken.add(jMenuItemKlassenDrucken);

        jMenuItemFremdsprachenGruppenDrucken.setText("Fremdsprachengruppen drucken");
        jMenuItemFremdsprachenGruppenDrucken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFremdsprachenGruppenDruckenActionPerformed(evt);
            }
        });
        jMenuDrucken.add(jMenuItemFremdsprachenGruppenDrucken);

        jMenuItemReligionsGruppenDrucken.setText("Religionsgruppen drucken");
        jMenuItemReligionsGruppenDrucken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemReligionsGruppenDruckenActionPerformed(evt);
            }
        });
        jMenuDrucken.add(jMenuItemReligionsGruppenDrucken);

        jMenuItemSportGruppenDrucken.setText("Sportgruppen drucken");
        jMenuItemSportGruppenDrucken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSportGruppenDruckenActionPerformed(evt);
            }
        });
        jMenuDrucken.add(jMenuItemSportGruppenDrucken);

        jMenuItemZweigGruppenDrucken.setText("Zweiggruppen drucken");
        jMenuItemZweigGruppenDrucken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemZweigGruppenDruckenActionPerformed(evt);
            }
        });
        jMenuDrucken.add(jMenuItemZweigGruppenDrucken);

        jMenuBar1.add(jMenuDrucken);

        jMenuHilfe.setText("Hilfe");

        jMenuItemAnleitung.setText("Anleitung");
        jMenuItemAnleitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAnleitungActionPerformed(evt);
            }
        });
        jMenuHilfe.add(jMenuItemAnleitung);

        jMenuItem3.setText("About");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenuHilfe.add(jMenuItem3);

        jMenuBar1.add(jMenuHilfe);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1131, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("\"\"");

        getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxJahrgangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxJahrgangActionPerformed
        // TODO add your handling code here:
        evalueteJahrgangsAuswahl();
        this.jComboBoxSortierung.setSelectedItem("Sortierung wählen");
        String s = jComboBoxJahrgang.getSelectedItem().toString();
        if (s.equals("Jahrgang wählen")){
            this.einstellungenZurücksetzen();
        }
    }//GEN-LAST:event_jComboBoxJahrgangActionPerformed

    private void jComboBoxSortierungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSortierungActionPerformed
        // TODO add your handling code here:
        String sortierung = jComboBoxSortierung.getSelectedItem().toString();
        for (Klasse k : aktuellerJahrgang.getKlassen()) {
            switch (sortierung) {
                case "Alphabetisch":
                    k.sortierenName();
                    break;
                case "Männlich/Weiblich":
                    k.sortierenGeschlecht();
                    break;
                case "Religion":
                    k.sortierenReligion();
                    break;
                case "Zweig":
                    k.sortierenZweig();
                    break;
            }
        }
        Component[] comps = jPanelKlassen.getComponents();
        for (Component comp : comps) {
            KlassenPanel gp = (KlassenPanel) comp;
            gp.aktualisiereListModel();
            gp.revalidate();
            gp.repaint();
        }
        jPanelKlassen.revalidate();
        jPanelKlassen.repaint();
    }//GEN-LAST:event_jComboBoxSortierungActionPerformed

    private void jButtonJahrgangDruckenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonJahrgangDruckenActionPerformed
        // TODO add your handling code here:
        PrintPDF printPdf = new PrintPDF(ge);
        int n = Integer.parseInt(jComboBoxJahrgang.getSelectedItem().toString());
        Jahrgang j = ge.getJahrgang(n);
        printPdf.druckeGesammterJahrgangMitGruppen(j);
    }//GEN-LAST:event_jButtonJahrgangDruckenActionPerformed

    private void jCheckBoxReligionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxReligionActionPerformed
        // TODO add your handling code here:
        if (jCheckBoxReligion.isSelected()) {
            aktuellerJahrgang.setNachReligion(true);
            einstellungFrameReligion = new EinstellungFrameReligion(aktuellerJahrgang, this);
            einstellungFrameReligion.setVisible(true);
            jButtonEinstellungReligion.setEnabled(true);
            jComboBoxJahrgang.setEnabled(false);
        } else {
            aktuellerJahrgang.setNachReligion(false);
            aktuellerJahrgang.clearReligionsgruppen();
            jButtonEinstellungReligion.setEnabled(false);
            jPanelReligion.removeAll();
            jPanelReligion.revalidate();
            jPanelReligion.repaint();

        }


    }//GEN-LAST:event_jCheckBoxReligionActionPerformed

    private void jButtonEinstellungReligionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEinstellungReligionActionPerformed
        // TODO add your handling code here:
        //aktuellerJahrgang.testKlassen();
        if (einstellungFrameReligion == null) {
            einstellungFrameReligion = new EinstellungFrameReligion(aktuellerJahrgang, this);
        }
        einstellungFrameReligion.setVisible(true);
        jComboBoxJahrgang.setEnabled(false);
    }//GEN-LAST:event_jButtonEinstellungReligionActionPerformed

    private void jCheckBoxSportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSportActionPerformed
        // TODO add your handling code here:
        if (jCheckBoxSport.isSelected()) {
            aktuellerJahrgang.setNachGeschlecht(true);
            einstellungFrameSport = new EinstellungFrameSport(aktuellerJahrgang, this);
            einstellungFrameSport.setVisible(true);
            jButtonEinstellungSport.setEnabled(true);
            jComboBoxJahrgang.setEnabled(false);
        } else {
            aktuellerJahrgang.setNachGeschlecht(false);
            aktuellerJahrgang.clearSportgruppen();
            jButtonEinstellungSport.setEnabled(false);
            jPanelSport.removeAll();
            jPanelSport.revalidate();
            jPanelSport.repaint();

        }

    }//GEN-LAST:event_jCheckBoxSportActionPerformed

    private void jCheckBoxZweigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxZweigActionPerformed
        // TODO add your handling code here:
        if (jCheckBoxZweig.isSelected()) {
            aktuellerJahrgang.setNachZweig(true);
            jButtonEinstellungZweig.setEnabled(true);
            einstellungFrameZweig = new EinstellungFrameZweig(aktuellerJahrgang, this);
            einstellungFrameZweig.setVisible(true);
            jComboBoxJahrgang.setEnabled(false);
        } else {
            aktuellerJahrgang.setNachZweig(false);
            aktuellerJahrgang.clearZweiggruppen();
            jButtonEinstellungZweig.setEnabled(false);
            jPanelZweig.removeAll();
            jPanelZweig.revalidate();
            jPanelZweig.repaint();

        }

    }//GEN-LAST:event_jCheckBoxZweigActionPerformed

    private void jButtonEinstellungSportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEinstellungSportActionPerformed
        // TODO add your handling code here:
        if (einstellungFrameSport == null) {
            einstellungFrameSport = new EinstellungFrameSport(aktuellerJahrgang, this);
        }
        einstellungFrameSport.setVisible(true);
        jComboBoxJahrgang.setEnabled(false);
        jComboBoxJahrgang.setEnabled(false);
    }//GEN-LAST:event_jButtonEinstellungSportActionPerformed

    private void jButtonEinstellungZweigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEinstellungZweigActionPerformed
        // TODO add your handling code here:
        if (einstellungFrameZweig == null) {
            einstellungFrameZweig = new EinstellungFrameZweig(aktuellerJahrgang, this);
        }
        einstellungFrameZweig.setVisible(true);
    }//GEN-LAST:event_jButtonEinstellungZweigActionPerformed

    private void jSpinnerAnzahlKlassenStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerAnzahlKlassenStateChanged
        // TODO add your handling code here:
        int aktWert = Integer.parseInt(jSpinnerAnzahlKlassen.getValue().toString());
        int anzahlKlassenPanel = jPanelKlassen.getComponentCount();

        if (aktWert == anzahlKlassenPanel + 1) {
            String neuBuchstabeKlasse = "";
            switch (aktWert) {
                case 1:
                    neuBuchstabeKlasse = "a";
                    break;
                case 2:
                    neuBuchstabeKlasse = "b";
                    break;
                case 3:
                    neuBuchstabeKlasse = "c";
                    break;
                case 4:
                    neuBuchstabeKlasse = "d";
                    break;
                case 5:
                    neuBuchstabeKlasse = "e";
                    break;
                case 6:
                    neuBuchstabeKlasse = "f";
                    break;
                case 7:
                    neuBuchstabeKlasse = "g";
                    break;
                case 8:
                    neuBuchstabeKlasse = "h";
                    break;
            }
            //System.out.println(aktuellerJahrgang.getJahrgang() + neuBuchstabeKlasse);
            Klasse klasseNeu = aktuellerJahrgang.getKlasse(neuBuchstabeKlasse);
            KlassenPanel gp = new KlassenPanel(klasseNeu, this);
            jPanelKlassen.add(gp);
            jPanelKlassen.revalidate();
            jPanelKlassen.repaint();
        } else if (aktWert == anzahlKlassenPanel - 1) {
            int indexLetztesPanel = jPanelKlassen.getComponentCount() - 1;
            KlassenPanel gp = (KlassenPanel) jPanelKlassen.getComponent(indexLetztesPanel);
            if (gp.getAnzahlSchueler() > 0) {
                JOptionPane.showMessageDialog(null, "Die letzte Gruppe ist nicht leer.\n Entfernen nicht möglich.");
                jSpinnerAnzahlKlassen.setValue(anzahlKlassenPanel);
                return;
            }

            jPanelKlassen.remove(indexLetztesPanel);
            jPanelKlassen.revalidate();
            jPanelKlassen.repaint();
        }

    }//GEN-LAST:event_jSpinnerAnzahlKlassenStateChanged

    private void jCheckBoxSpracheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSpracheActionPerformed
        // TODO add your handling code here:
        if (jCheckBoxSprache.isSelected()) {
            aktuellerJahrgang.setNachSprache(true);
            einstellungFrameSprachen = new EinstellungFrameSprachen(aktuellerJahrgang, this);
            einstellungFrameSprachen.setVisible(true);
            jButtonEinstellungSprache.setEnabled(true);
            jComboBoxJahrgang.setEnabled(false);
        } else {
            aktuellerJahrgang.setNachSprache(false);
            aktuellerJahrgang.clearSprachengruppen();
            jButtonEinstellungSport.setEnabled(false);
            jPanelSprachen.removeAll();
            jPanelSprachen.revalidate();
            jPanelSprachen.repaint();

        }

    }//GEN-LAST:event_jCheckBoxSpracheActionPerformed

    private void jButtonEinstellungSpracheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEinstellungSpracheActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        if (einstellungFrameSprachen == null) {
            einstellungFrameSprachen = new EinstellungFrameSprachen(aktuellerJahrgang, this);
        }
        einstellungFrameSprachen.setVisible(true);
        jComboBoxJahrgang.setEnabled(false);
    }//GEN-LAST:event_jButtonEinstellungSpracheActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // TODO add your handling code here:
        int i = jTabbedPane1.getSelectedIndex();
        if (aktuellerJahrgang != null) {
            switch (i) {
                case 0:
                    selectedTab = "Klassen";
                    klassenAnzeigen();
                    break;
                case 1:
                    selectedTab = "Sprachen";
                    sprachengruppenAnzeigen();
                    break;
                case 2:
                    selectedTab = "Religion";
                    religionsgruppenAnzeigen();
                    break;
                case 3:
                    selectedTab = "Sport";
                    sportgruppenAnzeigen();
                    break;
                case 4:
                    selectedTab = "Zweig";
                    zweiggruppenAnzeigen();
                    break;
            }
            System.out.println("Selected: " + selectedTab);
        }

    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jCheckBoxReligionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBoxReligionStateChanged

    }//GEN-LAST:event_jCheckBoxReligionStateChanged

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:

    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        merkeGeladeneDatei();
    }//GEN-LAST:event_formWindowClosing

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed

        new StudentNewFrame(this).setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButtonAnsichtDruckenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnsichtDruckenActionPerformed
        PrintPDF printPdf = new PrintPDF(ge);
        int n = Integer.parseInt(jComboBoxJahrgang.getSelectedItem().toString());
        Jahrgang j = ge.getJahrgang(n);

        if (selectedTab.equals("Klassen")) {
            printPdf.druckeKlassen(j);
        } else if (selectedTab.equals("Sprachen")) {
            printPdf.druckeFremdsprachenGruppe(j);
        } else if (selectedTab.equals("Religion")) {
            printPdf.druckeReligionsGruppe(j);
        } else if (selectedTab.equals("Sport")) {
            printPdf.druckeSportGruppe(j);
        } else if (selectedTab.equals("Zweig")) {
            printPdf.druckeZweigGruppe(j);
        }

    }//GEN-LAST:event_jButtonAnsichtDruckenActionPerformed

    private void jMenuItemAllesDruckenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAllesDruckenActionPerformed
        PrintPDF printPdf = new PrintPDF(ge);
        printPdf.Drucken();
    }//GEN-LAST:event_jMenuItemAllesDruckenActionPerformed

    private void jMenuItemCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCloseActionPerformed
        // TODO add your handling code here:
        merkeGeladeneDatei();
        dispose();
        System.exit(0);
    }//GEN-LAST:event_jMenuItemCloseActionPerformed

    private void jMenuItemSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveAsActionPerformed
        // TODO add your handling code here:
        new Speicherung(ge).speichernUnter();
        this.setTitle("Kursmanager - " + ge.getFile().toString());
        file = ge.getFile();
    }//GEN-LAST:event_jMenuItemSaveAsActionPerformed

    private void jMenuItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveActionPerformed
        // TODO add your handling code here:
        new Speicherung(ge).speichern();
        file = ge.getFile();
    }//GEN-LAST:event_jMenuItemSaveActionPerformed

    private void jMenuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenActionPerformed
        Speicherung sp = new Speicherung();
        ge = sp.serialisierungLaden();
        file = ge.getFile();
        jahrgangAuswahlAktivieren();
       
        
    }//GEN-LAST:event_jMenuItemOpenActionPerformed

    private void jMenuItemImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemImportActionPerformed
        // TODO add your handling code here:
        ge = new Gruppeneinteilung();
        ge.asvImport();
        file=null;
        aktuellerJahrgang=null;
        jahrgangAuswahlAktivieren();
        this.einstellungenZurücksetzen();
    }//GEN-LAST:event_jMenuItemImportActionPerformed

    private void jMenuItemJahrgangDruckenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemJahrgangDruckenActionPerformed
        PrintPDF printPdf = new PrintPDF(ge);
        int n = Integer.parseInt(jComboBoxJahrgang.getSelectedItem().toString());
        Jahrgang j = ge.getJahrgang(n);
        printPdf.druckeGesammterJahrgangMitGruppen(j);
    }//GEN-LAST:event_jMenuItemJahrgangDruckenActionPerformed

    private void jMenuItemKlassenDruckenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemKlassenDruckenActionPerformed
        PrintPDF printPdf = new PrintPDF(ge);
        int n = Integer.parseInt(jComboBoxJahrgang.getSelectedItem().toString());
        Jahrgang j = ge.getJahrgang(n);
        printPdf.druckeKlassen(j);
    }//GEN-LAST:event_jMenuItemKlassenDruckenActionPerformed

    private void jMenuItemReligionsGruppenDruckenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemReligionsGruppenDruckenActionPerformed
        PrintPDF printPdf = new PrintPDF(ge);
        int n = Integer.parseInt(jComboBoxJahrgang.getSelectedItem().toString());
        Jahrgang j = ge.getJahrgang(n);
        printPdf.druckeReligionsGruppe(j);
    }//GEN-LAST:event_jMenuItemReligionsGruppenDruckenActionPerformed

    private void jMenuItemFremdsprachenGruppenDruckenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFremdsprachenGruppenDruckenActionPerformed
        PrintPDF printPdf = new PrintPDF(ge);
        int n = Integer.parseInt(jComboBoxJahrgang.getSelectedItem().toString());
        Jahrgang j = ge.getJahrgang(n);
        printPdf.druckeFremdsprachenGruppe(j);
    }//GEN-LAST:event_jMenuItemFremdsprachenGruppenDruckenActionPerformed

    private void jMenuItemSportGruppenDruckenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSportGruppenDruckenActionPerformed
        PrintPDF printPdf = new PrintPDF(ge);
        int n = Integer.parseInt(jComboBoxJahrgang.getSelectedItem().toString());
        Jahrgang j = ge.getJahrgang(n);
        printPdf.druckeSportGruppe(j);
    }//GEN-LAST:event_jMenuItemSportGruppenDruckenActionPerformed

    private void jMenuItemZweigGruppenDruckenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemZweigGruppenDruckenActionPerformed
        PrintPDF printPdf = new PrintPDF(ge);
        int n = Integer.parseInt(jComboBoxJahrgang.getSelectedItem().toString());
        Jahrgang j = ge.getJahrgang(n);
        printPdf.druckeZweigGruppe(j);
    }//GEN-LAST:event_jMenuItemZweigGruppenDruckenActionPerformed

    private void jPanelSportFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanelSportFocusGained
        selectedTab = "Sport";
    }//GEN-LAST:event_jPanelSportFocusGained

    private void jPanelKlassenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanelKlassenFocusGained
        selectedTab = "Klassen";
    }//GEN-LAST:event_jPanelKlassenFocusGained

    private void jPanelSprachenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanelSprachenFocusGained
        selectedTab = "Sprachen";
    }//GEN-LAST:event_jPanelSprachenFocusGained

    private void jPanelReligionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanelReligionFocusGained
        selectedTab = "Religion";
    }//GEN-LAST:event_jPanelReligionFocusGained

    private void jPanelZweigFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanelZweigFocusGained
        selectedTab = "Religion";
    }//GEN-LAST:event_jPanelZweigFocusGained

    private void jMenuItemAnleitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAnleitungActionPerformed

        if (Desktop.isDesktopSupported()) {
            try {
                File myFile = new File("Anleitung.pdf");
                Desktop.getDesktop().open(myFile);
            } catch (IOException ex) {
                // no application registered for PDFs
            }
        }
    }//GEN-LAST:event_jMenuItemAnleitungActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        about = new About();
        about.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnsichtDrucken;
    private javax.swing.JButton jButtonEinstellungReligion;
    private javax.swing.JButton jButtonEinstellungSport;
    private javax.swing.JButton jButtonEinstellungSprache;
    private javax.swing.JButton jButtonEinstellungZweig;
    private javax.swing.JButton jButtonJahrgangDrucken;
    private javax.swing.JCheckBox jCheckBoxReligion;
    private javax.swing.JCheckBox jCheckBoxSport;
    private javax.swing.JCheckBox jCheckBoxSprache;
    private javax.swing.JCheckBox jCheckBoxZweig;
    private javax.swing.JComboBox jComboBoxJahrgang;
    private javax.swing.JComboBox<String> jComboBoxSortierung;
    private javax.swing.JLabel jLabelEthik;
    private javax.swing.JLabel jLabelEvangelisch;
    private javax.swing.JLabel jLabelKatholisch;
    private javax.swing.JLabel jLabelKlassen;
    private javax.swing.JLabel jLabelMännlich;
    private javax.swing.JLabel jLabelSchülergesamt;
    private javax.swing.JLabel jLabelWeiblich;
    private javax.swing.JLabel jLabelZweig1;
    private javax.swing.JLabel jLabelZweig2;
    private javax.swing.JLabel jLabelZweig3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenu jMenuDrucken;
    private javax.swing.JMenu jMenuHilfe;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItemAllesDrucken;
    private javax.swing.JMenuItem jMenuItemAnleitung;
    private javax.swing.JMenuItem jMenuItemClose;
    private javax.swing.JMenuItem jMenuItemFremdsprachenGruppenDrucken;
    private javax.swing.JMenuItem jMenuItemImport;
    private javax.swing.JMenuItem jMenuItemJahrgangDrucken;
    private javax.swing.JMenuItem jMenuItemKlassenDrucken;
    private javax.swing.JMenuItem jMenuItemOpen;
    private javax.swing.JMenuItem jMenuItemReligionsGruppenDrucken;
    private javax.swing.JMenuItem jMenuItemSave;
    private javax.swing.JMenuItem jMenuItemSaveAs;
    private javax.swing.JMenuItem jMenuItemSportGruppenDrucken;
    private javax.swing.JMenuItem jMenuItemZweigGruppenDrucken;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelKlassen;
    private javax.swing.JPanel jPanelReligion;
    private javax.swing.JPanel jPanelSport;
    private javax.swing.JPanel jPanelSprachen;
    private javax.swing.JPanel jPanelZweig;
    private javax.swing.JSpinner jSpinnerAnzahlKlassen;
    private javax.swing.SpinnerModel modelAnzahlKlassen = new javax.swing.SpinnerNumberModel(0, 0, 10, 1);
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    public void jahrgangAuswahlAktivieren() {
        jMenuItemSave.setEnabled(true);
        jMenuItemSaveAs.setEnabled(true);
        jComboBoxJahrgang.setEnabled(true);
        String dateiname;
        if (ge.getFile() == null) {
            dateiname = "";
        } else {
            dateiname = " - " + ge.getFile().toString();
        }
        this.setTitle("Kursmanager" + dateiname);
        
        if (ge.getAktJahrgang() != null) {
            aktuellerJahrgang = ge.getAktJahrgang();
            jComboBoxJahrgang.setSelectedIndex(aktuellerJahrgang.getJahrgang() - 4);
        } else {
            
            jComboBoxJahrgang.setSelectedIndex(0);
            jPanelKlassen.removeAll();
            jPanelKlassen.revalidate();
            jPanelKlassen.repaint();
            jPanelSport.removeAll();
            jPanelSport.revalidate();
            jPanelSport.repaint();
            jPanelZweig.removeAll();
            jPanelZweig.revalidate();
            jPanelZweig.repaint();
            jPanelReligion.removeAll();
            jPanelReligion.revalidate();
            jPanelReligion.repaint();
            jPanelSprachen.removeAll();
            jPanelSprachen.revalidate();
            jPanelSprachen.repaint();
            
            jTabbedPane1.revalidate();
            jTabbedPane1.repaint();
        }
    }

    public void aktiviereJahrgangComponents(boolean istAn) {
        jButtonJahrgangDrucken.setEnabled(istAn);
        jButtonAnsichtDrucken.setEnabled(istAn);
        jSpinnerAnzahlKlassen.setEnabled(istAn);
        jComboBoxSortierung.setEnabled(istAn);
        jCheckBoxReligion.setEnabled(istAn);
        jCheckBoxSport.setEnabled(istAn);
        jCheckBoxZweig.setEnabled(istAn);
        jCheckBoxSprache.setEnabled(istAn);
        jLabelKlassen.setEnabled(istAn);
        jLabelSchülergesamt.setVisible(istAn);
        jLabelKatholisch.setVisible(istAn);
        jLabelEvangelisch.setVisible(istAn);
        jLabelEthik.setVisible(istAn);
        jLabelMännlich.setVisible(istAn);
        jLabelWeiblich.setVisible(istAn);
        jLabelZweig1.setVisible(istAn);
        jLabelZweig2.setVisible(istAn);
        jLabelZweig3.setVisible(istAn);
        jMenu2.setEnabled(istAn);
        jMenuDrucken.setEnabled(istAn);
    }

    public void evalueteJahrgangsAuswahl() {
        String auswahl = jComboBoxJahrgang.getSelectedItem().toString();
        int n;
        try {
            n = Integer.parseInt(auswahl);
        } catch (NumberFormatException e) {
            // Kein Jahrgang ausgewählt -> aufräumen
            jSpinnerAnzahlKlassen.getModel().setValue(0);
            aktiviereJahrgangComponents(false);
            jPanelKlassen.removeAll();
            jPanelKlassen.revalidate();
            jPanelKlassen.repaint();
            return;
        }

        aktuellerJahrgang = ge.getJahrgang(n);
        ge.setAktJahrgang(aktuellerJahrgang);
        aktuellerJahrgang.setKlassenanzahl();

        aktiviereJahrgangComponents(true);
        klassenAnzeigen();
        aktualisiereLabelJahrgang();

        int klassenanzahl = aktuellerJahrgang.getKlassenanzahl();
        jSpinnerAnzahlKlassen.getModel().setValue(klassenanzahl);

        if (aktuellerJahrgang.istNachReligion()) {
            jCheckBoxReligion.setSelected(true);
            jButtonEinstellungReligion.setEnabled(true);
            religionsgruppenAnzeigen();
        } else {
            aktuellerJahrgang.clearReligionsgruppen();
            jCheckBoxReligion.setSelected(false);
            jButtonEinstellungReligion.setEnabled(false);
            jPanelReligion.removeAll();
            jPanelReligion.revalidate();
            jPanelReligion.repaint();

        }

        if (aktuellerJahrgang.istNachSport()) {
            jCheckBoxSport.setSelected(true);
            jButtonEinstellungSport.setEnabled(true);
            sportgruppenAnzeigen();
        } else {
            aktuellerJahrgang.clearSportgruppen();
            jCheckBoxSport.setSelected(false);
            jButtonEinstellungSport.setEnabled(false);
            jPanelSport.removeAll();
            jPanelSport.revalidate();
            jPanelSport.repaint();

        }

        if (aktuellerJahrgang.istNachZweig()) {
            jCheckBoxZweig.setSelected(true);
            jButtonEinstellungZweig.setEnabled(true);
            zweiggruppenAnzeigen();
        } else {
            aktuellerJahrgang.clearZweiggruppen();
            jCheckBoxZweig.setSelected(false);
            jButtonEinstellungZweig.setEnabled(false);
            jPanelZweig.removeAll();
            jPanelZweig.revalidate();
            jPanelZweig.repaint();

        }
        if (aktuellerJahrgang.istNachSprache()) {
            jCheckBoxSprache.setSelected(true);
            jButtonEinstellungSprache.setEnabled(true);
            sprachengruppenAnzeigen();
        } else {
            aktuellerJahrgang.clearSprachengruppen();
            jCheckBoxSprache.setSelected(false);
            jButtonEinstellungSprache.setEnabled(false);
            jPanelSprachen.removeAll();
            jPanelSprachen.revalidate();
            jPanelSprachen.repaint();

        }
        jPanelKlassen.revalidate();
        jPanelKlassen.repaint();
    }
    public void einstellungenZurücksetzen(){
        jButtonEinstellungSprache.setEnabled(false);
        jButtonEinstellungReligion.setEnabled(false);
        jButtonEinstellungSport.setEnabled(false);
        jButtonEinstellungZweig.setEnabled(false);
        jCheckBoxSprache.setSelected(false);
        jCheckBoxReligion.setSelected(false);
        jCheckBoxSport.setSelected(false);
        jCheckBoxZweig.setSelected(false);
    }

    public void aktualisiereLabelJahrgang() {
        int n = aktuellerJahrgang.getJahrgang();
        if (n == 5 || n == 6) {
            String anzahlGY = aktuellerJahrgang.getGY() + "";
            //jLabel1Anzahl.setText(anzahlGY);
            jLabelZweig1.setText("ohne Zweig: " + anzahlGY);
            String anzahlGY_MU = aktuellerJahrgang.getGY_MU() + "";
            //jLabel2Anzahl.setText(anzahlGY_MU);
            jLabelZweig2.setText("Musikklassen: " + anzahlGY_MU);
            String anzahlGY_TH = aktuellerJahrgang.getGY_TH() + "";
            //jLabel3Anzahl.setText(anzahlGY_TH);
            jLabelZweig3.setText("Theaterklassen: " + anzahlGY_TH);
        } else if (n == 7) {
            String anzahlGY = aktuellerJahrgang.getGY() + "";

            jLabelZweig1.setText("");
            //jLabel1Anzahl.setText("");
            jLabelZweig2.setText("");
            //jLabel2Anzahl.setText("");
            jLabelZweig3.setText("");
            //jLabel3Anzahl.setText("");
        } else if (n == 8 || n == 9 || n == 10) {
            String anzahlGY_NTG = aktuellerJahrgang.getGY_NTG() + "";
            //jLabel1Anzahl.setText(anzahlGY_NTG);
            jLabelZweig1.setText("NTG-Zweig: " + anzahlGY_NTG);
            String anzahlGY_WSG = aktuellerJahrgang.getGY_WSG() + "";
            //jLabel2Anzahl.setText(anzahlGY_WSG);
            jLabelZweig2.setText("WSG-Zweig: " + anzahlGY_WSG);
            String anzahlGY_SG = aktuellerJahrgang.getGY_SG() + "";
            //jLabel3Anzahl.setText(anzahlGY_SG);
            jLabelZweig3.setText("SG-Zweig: " + anzahlGY_SG);
        }

        String anzahlSchueler = aktuellerJahrgang.getSchuelerAnzahl() + "";
        jLabelSchülergesamt.setText("Gesamt: " + anzahlSchueler);
        //jLabelSchülergesamtAnzahl.setText(anzahlSchueler);
        String anzahlKatholisch = aktuellerJahrgang.getKatholisch() + "";
        jLabelKatholisch.setText("Katholisch: " + anzahlKatholisch);
        //jLabelKatholischAnzahl.setText(anzahlKatholisch);
        String anzahlEthik = aktuellerJahrgang.getEthik() + "";
        jLabelEthik.setText("Ethik: " + anzahlEthik);
        //jLabelEthikAnzahl.setText(anzahlEthik);
        String anzahlEvangelisch = aktuellerJahrgang.getEvangelisch() + "";
        jLabelEvangelisch.setText("Evangelisch:" + anzahlEvangelisch);
        //jLabelEvangelischAnzahl.setText(anzahlEvangelisch);
        String anzahlMännlich = aktuellerJahrgang.getMaennlich() + "";
        jLabelMännlich.setText("Männlich: " + anzahlMännlich);
        //jLabelMännlichAnzahl.setText(anzahlMännlich);
        String anzahlWeiblich = aktuellerJahrgang.getWeiblich() + "";
        jLabelWeiblich.setText("Weiblich: " + anzahlWeiblich);
        //jLabelWeiblichAnzahl.setText(anzahlWeiblich);
    }

    public void klassenAnzeigen() {
        jPanelKlassen.removeAll();
        for (Klasse k : aktuellerJahrgang.getKlassen()) {
            if (k.getKlassengroesse() > 0) {
                KlassenPanel gp = new KlassenPanel(k, this);
                jPanelKlassen.add(gp);
            }
        }
        jPanelKlassen.revalidate();
        jPanelKlassen.repaint();
    }

    public void sportgruppenAnzeigen() {
        jPanelSport.removeAll();
        for (GruppeSport s : aktuellerJahrgang.getSportgruppen()) {
                jPanelSport.add(new GruppenPanel(s));
        }
        jPanelSport.revalidate();
        jPanelSport.repaint();
    }

    public void religionsgruppenAnzeigen() {

        jPanelReligion.removeAll();
        for (GruppeReligion r : aktuellerJahrgang.getReligionsgruppen()) {
            jPanelReligion.add(new GruppenPanel(r));
        }
        jPanelReligion.revalidate();
        jPanelReligion.repaint();
    }

    public void zweiggruppenAnzeigen() {
        jPanelZweig.removeAll();
        for (GruppeZweig zg : aktuellerJahrgang.getZweiggruppen()) {
            jPanelZweig.add(new GruppenPanel(zg));
        }
        jPanelZweig.revalidate();
        jPanelZweig.repaint();
    }

    public void sprachengruppenAnzeigen() {
        jPanelSprachen.removeAll();
        for (GruppeSprache f : aktuellerJahrgang.getSprachengruppen()) {
                jPanelSprachen.add(new GruppenPanel(f));
        }
        jPanelSprachen.revalidate();
        jPanelSprachen.repaint();
    }

    public void merkeGeladeneDatei() {

        try {
            if (file != null) {
                FileWriter fw = new FileWriter("ge.ini");
                BufferedWriter bw = new BufferedWriter(fw);
                bw.write(file.getAbsolutePath());
                System.out.println(file.getAbsolutePath());
                bw.close();
            } else {
                int auswahl = JOptionPane.showOptionDialog(null, "Schließen ohne zu Speichern?", "Warnung", 
                        JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE, null,
                        new String[]{"Speichern", "Schließen"},"default");
                if (auswahl == JOptionPane.YES_OPTION) {
                    new Speicherung(ge).speichern();
                    file = ge.getFile();
                }
            }
        } catch (IOException ex) {

        }
    }

    public void ladeDatei() {
        try {
            File ini = new File("ge.ini");
            if (ini.exists()) {
                FileReader fr = new FileReader(ini);
                BufferedReader br = new BufferedReader(fr);
                File fileNeu = null;
                String dateiname = br.readLine();
                fileNeu = new File(dateiname);
                Speicherung sp;
                if (fileNeu.exists()) {
                    sp = new Speicherung(fileNeu);
                    ge = sp.serialisierungLaden();
                    file = ge.getFile();
                    jahrgangAuswahlAktivieren();
                } 
                
                br.close();
            }
        } catch (IOException ex) {

        } catch (NullPointerException ex) {

        }
    }

    public void jComboBoxJahrgangFreigeben() {
        jComboBoxJahrgang.setEnabled(true);
    }
    
    public void allePanelsAktualisieren(){
        klassenAnzeigen();
        religionsgruppenAnzeigen();
        sportgruppenAnzeigen();
        sprachengruppenAnzeigen();
        zweiggruppenAnzeigen();
    }

}
